-- MySQL Script generated by MySQL Workbench
-- 05/31/17 00:54:09
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `tipo_propiedad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tipo_propiedad` ;

CREATE TABLE IF NOT EXISTS `tipo_propiedad` (
  `tipo_propiedad_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`tipo_propiedad_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `propiedades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `propiedades` ;

CREATE TABLE IF NOT EXISTS `propiedades` (
  `propiedades_id` INT NOT NULL AUTO_INCREMENT,
  `tipo_propiedad_id` INT NOT NULL,
  `descripcion_es` LONGTEXT NULL,
  `descripcion_en` LONGTEXT NULL,
  `metros_utiles` DECIMAL(8,2) NOT NULL DEFAULT 0,
  `metros_construidos` DECIMAL(8,2) NOT NULL DEFAULT 0,
  `cuartos` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `salas` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `cocinas` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `banos` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `cajones_estacionamiento` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `precio_avaluo` DECIMAL(11,2) NOT NULL DEFAULT 0,
  `precio_publico` DECIMAL(11,2) NOT NULL DEFAULT 0,
  `longitud` VARCHAR(45) NULL,
  `latitud` VARCHAR(45) NULL,
  `calle` VARCHAR(100) NULL,
  `no_exterior` VARCHAR(20) NULL,
  `no_interior` VARCHAR(20) NULL,
  `colonia` VARCHAR(100) NULL,
  `municipio` VARCHAR(200) NULL,
  `estado` VARCHAR(100) NULL,
  `pais` VARCHAR(100) NULL,
  `codigo_postal` VARCHAR(10) NULL,
  `estatus` TINYINT(2) NOT NULL DEFAULT 1,
  `destacada` TINYINT(2) NOT NULL DEFAULT 0,
  `pagina_inicio` TINYINT(2) NOT NULL DEFAULT 0,
  `oferta_especial` TINYINT(2) NOT NULL DEFAULT 0,
  `fecha_creado` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `fecha_actualizado` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`propiedades_id`),
  INDEX `tipo_propiedad_id_idx` (`tipo_propiedad_id` ASC),
  INDEX `oferta_especial_idx` (`oferta_especial` ASC),
  INDEX `pagina_inicio_idx` (`pagina_inicio` ASC),
  INDEX `destacada_idx` (`destacada` ASC),
  INDEX `metros_utiles_idx` (`metros_utiles` ASC),
  INDEX `metros_construidos_idx` (`metros_construidos` ASC),
  INDEX `cuartos_idx` (`cuartos` ASC),
  INDEX `salas_idx` (`salas` ASC),
  INDEX `banos_idx` (`banos` ASC),
  INDEX `precio_publico_idx` (`precio_publico` ASC),
  CONSTRAINT `tipo_propiedad_id`
    FOREIGN KEY (`tipo_propiedad_id`)
    REFERENCES `tipo_propiedad` (`tipo_propiedad_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estatus_propiedad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estatus_propiedad` ;

CREATE TABLE IF NOT EXISTS `estatus_propiedad` (
  `estatus_propiedad_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(70) NULL,
  `desc_corta` VARCHAR(45) NULL,
  PRIMARY KEY (`estatus_propiedad_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estatus_propiedades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `estatus_propiedades` ;

CREATE TABLE IF NOT EXISTS `estatus_propiedades` (
  `estatus_propiedades_id` INT NOT NULL AUTO_INCREMENT,
  `propiedades_id` INT NOT NULL,
  `estatus_propiedad_id` INT NOT NULL,
  PRIMARY KEY (`estatus_propiedades_id`),
  INDEX `propiedades_id1_idx` (`propiedades_id` ASC),
  INDEX `estatus_propiedad_id1_idx` (`estatus_propiedad_id` ASC),
  CONSTRAINT `propiedades_id1`
    FOREIGN KEY (`propiedades_id`)
    REFERENCES `propiedades` (`propiedades_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `estatus_propiedad_id1`
    FOREIGN KEY (`estatus_propiedad_id`)
    REFERENCES `estatus_propiedad` (`estatus_propiedad_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usuarios` ;

CREATE TABLE IF NOT EXISTS `usuarios` (
  `usuarios_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `apellidos` VARCHAR(100) NULL,
  `username` VARCHAR(100) NULL,
  `email` VARCHAR(100) NULL,
  `pass` VARCHAR(100) NULL,
  `estatus` TINYINT(2) NOT NULL DEFAULT 1,
  PRIMARY KEY (`usuarios_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `agentes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `agentes` ;

CREATE TABLE IF NOT EXISTS `agentes` (
  `agentes_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(60) NULL,
  `apellido_paterno` VARCHAR(50) NULL,
  `apellido_materno` VARCHAR(50) NULL,
  `tel_movil` VARCHAR(18) NULL,
  `tel_fijo` VARCHAR(18) NULL,
  `tel_fijo_ext` VARCHAR(18) NULL,
  `email` VARCHAR(100) NULL,
  `facebook_profile` VARCHAR(200) NULL,
  `twitter_profile` VARCHAR(200) NULL,
  `linkedin_profile` VARCHAR(200) NULL,
  `img_profile` VARCHAR(200) NULL,
  `descripcion_es` VARCHAR(500) NULL,
  `descripcion_en` VARCHAR(500) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`agentes_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Placeholder table for view `v_estatus_propiedades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `v_estatus_propiedades` (`estatus_propiedades_id` INT, `propiedades_id` INT, `estatus_propiedad_id` INT, `nombre` INT, `desc_corta` INT);

-- -----------------------------------------------------
-- Placeholder table for view `v_propiedades_completo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `v_propiedades_completo` (`propiedades_id` INT, `tipo_propiedad_id` INT, `descripcion_es` INT, `descripcion_en` INT, `metros_utiles` INT, `metros_construidos` INT, `cuartos` INT, `salas` INT, `cocinas` INT, `banos` INT, `cajones_estacionamiento` INT, `precio_avaluo` INT, `precio_publico` INT, `longitud` INT, `latitud` INT, `calle` INT, `no_exterior` INT, `no_interior` INT, `colonia` INT, `municipio` INT, `estado` INT, `pais` INT, `codigo_postal` INT, `estatus` INT, `destacada` INT, `pagina_inicio` INT, `oferta_especial` INT, `fecha_creado` INT, `fecha_actualizado` INT, `tipo_propiedad` INT, `estatus_propiedad` INT);

-- -----------------------------------------------------
-- View `v_estatus_propiedades`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `v_estatus_propiedades` ;
DROP TABLE IF EXISTS `v_estatus_propiedades`;
CREATE OR REPLACE VIEW v_estatus_propiedades AS
SELECT
eps.*, ep.nombre, ep.desc_corta
FROM
estatus_propiedades eps
INNER JOIN estatus_propiedad ep ON eps.estatus_propiedad_id = ep.estatus_propiedad_id;

-- -----------------------------------------------------
-- View `v_propiedades_completo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `v_propiedades_completo` ;
DROP TABLE IF EXISTS `v_propiedades_completo`;
CREATE OR REPLACE VIEW v_propiedades_completo AS
SELECT
p.*, tp.nombre as tipo_propiedad, GROUP_CONCAT(vep.desc_corta SEPARATOR ' - ') as estatus_propiedad
FROM propiedades p
INNER JOIN tipo_propiedad tp ON p.tipo_propiedad_id = tp.tipo_propiedad_id
INNER JOIN v_estatus_propiedades vep ON p.propiedades_id = vep.propiedades_id
GROUP BY vep.propiedades_id;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `tipo_propiedad`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `tipo_propiedad` (`tipo_propiedad_id`, `nombre`) VALUES (1, 'Casa');
INSERT INTO `tipo_propiedad` (`tipo_propiedad_id`, `nombre`) VALUES (2, 'Departamento');
INSERT INTO `tipo_propiedad` (`tipo_propiedad_id`, `nombre`) VALUES (3, 'Pent - House');

COMMIT;


-- -----------------------------------------------------
-- Data for table `estatus_propiedad`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `estatus_propiedad` (`estatus_propiedad_id`, `nombre`, `desc_corta`) VALUES (1, 'Venta', 'Venta');
INSERT INTO `estatus_propiedad` (`estatus_propiedad_id`, `nombre`, `desc_corta`) VALUES (2, 'Renta', 'Renta');

COMMIT;

